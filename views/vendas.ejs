<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Gerenciar Vendas</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/styles.css" />

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>

  <style>
    .autocomplete-suggestions {
      position: absolute; z-index: 1000; background: #fff; border: 1px solid #ccc;
      max-height: 220px; overflow-y: auto; width: 100%; list-style: none; padding: 0; margin: 0;
      box-shadow: 0 2px 5px rgba(0,0,0,.2);
    }
    .autocomplete-suggestions li { padding: 8px; cursor: pointer; }
    .autocomplete-suggestions li:hover { background-color: #f0f0f0; }
    .barcode-input:focus { outline: none; border-color: #0d6efd; box-shadow: 0 0 5px rgba(13,110,253,.5); }
    .table thead th { white-space: nowrap; }
    .btn-icon { display: inline-flex; align-items: center; gap: .35rem; }
    .row-cancelada { opacity: .65; }
  </style>
</head>
<body>
  <!-- NAVBAR -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand fw-semibold" href="/">Gerenciador</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item"><a class="nav-link" href="/produtos">Produtos</a></li>
          <li class="nav-item"><a class="nav-link" href="/clientes">Clientes</a></li>
          <li class="nav-item"><a class="nav-link active" href="/vendas">Vendas</a></li>
          <li class="nav-item"><a class="nav-link" href="/carga-produtos">Carga de Produtos</a></li>
        </ul>
      </div>
    </div>
  </nav>

  <!-- CONTAINER -->
  <div class="container mt-4">
    <h1 class="mb-4">Gerenciar Vendas</h1>

    <% if (typeof error !== 'undefined' && error) { %>
      <div class="alert alert-danger alert-dismissible fade show" id="error-alert" role="alert">
        <%= error %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    <% } else { %>
      <div class="alert alert-danger alert-dismissible fade show" id="error-alert" role="alert" style="display:none"></div>
    <% } %>

    <!-- REGISTRAR NOVA VENDA -->
    <div class="card mb-4 shadow-sm">
      <div class="card-body">
        <h5 class="card-title">Registrar Nova Venda</h5>

        <form id="venda-form" action="/vendas" method="POST" autocomplete="off">
          <div class="row g-3 mb-2">
            <div class="col-md-8 position-relative">
              <label class="form-label">Cliente</label>
              <div class="input-group">
                <input
                  type="text"
                  class="form-control"
                  id="cliente-search"
                  placeholder="Buscar por nome, email ou CPF"
                  value="<%= (formData && formData.cliente_nome) ? formData.cliente_nome : '' %>">
                <input type="hidden" name="id_cliente" id="id_cliente" value="<%= (formData && formData.id_cliente) ? formData.id_cliente : '' %>">
                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#novoClienteModal">Novo Cliente</button>
              </div>
              <ul id="cliente-suggestions" class="autocomplete-suggestions" style="display:none"></ul>
            </div>

            <div class="col-md-4">
              <label class="form-label">C√≥digo de Barras</label>
              <input type="text" class="form-control barcode-input" id="barcode-input" placeholder="Bipar ou digitar c√≥digo">
              <div class="form-text">Pressione Enter para adicionar</div>
            </div>
          </div>

          <h6 class="mt-3">Itens da Venda</h6>
          <div class="table-responsive mb-3">
            <table class="table table-striped table-hover align-middle" id="itens-venda-table">
              <thead>
                <tr>
                  <th>Produto</th>
                  <th>C√≥digo de Barras</th>
                  <th>Valor Unit√°rio</th>
                  <th>Quantidade</th>
                  <th>Subtotal</th>
                  <th>A√ß√µes</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>

          <div class="d-flex justify-content-between align-items-center">
            <strong id="total-venda" class="fs-5 text-success">Total: R$ 0.00</strong>
            <button type="submit" class="btn btn-lg btn-success" id="btn-fechar" disabled>üíæ Fechar Venda</button>
          </div>
        </form>
      </div>
    </div>

    <!-- LISTA DE VENDAS -->
    <h2 class="mb-3">Lista de Vendas</h2>
    <div class="table-responsive">
      <table class="table table-striped table-hover align-middle">
        <thead>
          <tr>
            <th>Data</th>
            <th>Cliente</th>
            <th>Total</th>
            <th style="width: 320px;">A√ß√µes</th>
          </tr>
        </thead>
        <tbody id="lista-vendas-tbody">
          <% (vendas || []).forEach(venda => { 
               const cancelada = ((venda.status || '').toUpperCase() === 'CANCELADA');
          %>
            <tr data-row-venda-id="<%= venda.id %>" class="<%= cancelada ? 'table-secondary row-cancelada' : '' %>">
              <td>
                <%= venda.data_venda ? new Date(venda.data_venda).toLocaleString('pt-BR') : '' %>
                <% if (cancelada) { %> <span class="badge bg-secondary ms-2">Cancelada</span> <% } %>
              </td>
              <td><%= venda.cliente_nome || 'Sem cliente' %></td>
              <td>R$ <%= parseFloat(venda.total || 0).toFixed(2) %></td>
              <td>
                <a class="btn btn-sm btn-outline-secondary btn-icon <%= cancelada ? 'disabled' : '' %>"
                   href="<%= cancelada ? '#' : ('/vendas/recibo/' + venda.id) %>"
                   target="<%= cancelada ? '' : '_blank' %>" rel="noopener"
                   tabindex="<%= cancelada ? '-1' : '0' %>" aria-disabled="<%= cancelada ? 'true' : 'false' %>">
                  <span>üñ®Ô∏è</span><span>Recibo</span>
                </a>

                <button type="button"
                        class="btn btn-sm btn-outline-info btn-icon btn-detalhes"
                        data-id="<%= venda.id %>"
                        data-bs-toggle="modal"
                        data-bs-target="#detalhesVendaModal">
                  <span>üîç</span><span>Detalhes</span>
                </button>

                <% if (!cancelada) { %>
                  <button type="button"
                          class="btn btn-sm btn-outline-warning btn-icon btn-reverter"
                          data-id="<%= venda.id %>">
                    <span>‚Ü©Ô∏è</span><span>Reverter</span>
                  </button>
                <% } %>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- MODAL NOVO CLIENTE -->
  <div class="modal fade" id="novoClienteModal" tabindex="-1" aria-labelledby="novoClienteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="novoClienteModalLabel">Cadastrar Novo Cliente</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
        </div>
        <div class="modal-body">
          <div class="alert alert-danger alert-dismissible fade show" id="cliente-error" style="display:none;">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
          </div>
          <form id="form-novo-cliente">
            <div class="mb-3">
              <label class="form-label">Nome *</label>
              <input type="text" class="form-control" name="nome" required>
            </div>
            <div class="mb-3">
              <label class="form-label">CPF (000.000.000-00) *</label>
              <input type="text" class="form-control cpf-mask" name="cpf" placeholder="000.000.000-00" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Email</label>
              <input type="email" class="form-control" name="email">
            </div>
            <div class="mb-3">
              <label class="form-label">Telefone</label>
              <input type="text" class="form-control" name="telefone">
            </div>
            <div class="mb-3">
              <label class="form-label">Endere√ßo</label>
              <textarea class="form-control" name="endereco"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Cadastrar Cliente</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- MODAL DETALHES -->
  <div class="modal fade" id="detalhesVendaModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Detalhes da venda</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
        </div>
        <div class="modal-body">
          <div id="detalhes-meta" class="mb-2 small text-muted">Selecione uma venda para ver os detalhes.</div>
          <div class="table-responsive">
            <table class="table table-bordered align-middle">
              <thead>
                <tr>
                  <th>Produto</th>
                  <th>Quantidade</th>
                  <th>Pre√ßo</th>
                  <th>Subtotal</th>
                </tr>
              </thead>
              <tbody id="detalhes-body">
                <tr><td colspan="4" class="text-center text-muted">‚Äî</td></tr>
              </tbody>
            </table>
          </div>
          <p class="text-end fw-bold" id="detalhes-total"></p>
        </div>
      </div>
    </div>
  </div>

  <!-- SCRIPTS -->
  <script>
    // M√°scara CPF
    $(function(){ $('.cpf-mask').mask('000.000.000-00'); });

    // Busca din√¢mica de clientes
    $('#cliente-search').on('input', function() {
      const query = $(this).val().trim();
      const $list = $('#cliente-suggestions');
      if (query.length < 2) { $list.empty().hide(); return; }

      $.ajax({
        url: '/clientes/buscar',
        method: 'GET',
        data: { search: query },
        success: function(data) {
          $list.empty();
          if (!Array.isArray(data) || data.length === 0) { $list.hide(); return; }
          data.forEach(c => {
            $list.append(`<li data-id="${c.id}" data-nome="${c.nome}" data-cpf="${c.cpf}">${c.nome} (${c.cpf})</li>`);
          });
          $list.show();
        },
        error: function(xhr) {
          $('#error-alert').text('Erro ao buscar clientes: ' + (xhr.responseJSON?.error || 'Falha desconhecida')).show();
        }
      });
    });

    // Selecionar cliente
    $(document).on('click', '#cliente-suggestions li', function() {
      const id = $(this).data('id');
      const nome = $(this).data('nome');
      const cpf = $(this).data('cpf');
      $('#cliente-search').val(`${nome} (${cpf})`);
      $('#id_cliente').val(id);
      $('#cliente-suggestions').empty().hide();
    });

    // Adicionar item via barcode
    function adicionarItem(barcode, cb) {
      $.ajax({
        url: '/produtos/buscar',
        method: 'GET',
        data: { barcode },
        success: function(data) {
          const $tbody = $('#itens-venda-table tbody');
          const index = $tbody.children().length;

          const preco = Number(data.preco) || 0;
          const estoque = Number(data.estoque) || 0;
          const subtotal = preco * 1;

          $tbody.append(`
            <tr data-barcode="${data.barcode}">
              <td>${data.nome}</td>
              <td>${data.barcode}</td>
              <td>R$ ${preco.toFixed(2)}</td>
              <td>
                <input type="number" class="form-control quantidade-input"
                       name="itens[${index}][quantidade]" value="1" min="1" max="${estoque}" required>
              </td>
              <td class="subtotal">R$ ${subtotal.toFixed(2)}</td>
              <td>
                <input type="hidden" name="itens[${index}][barcode]" value="${data.barcode}">
                <button type="button" class="btn btn-sm btn-danger remove-item">Remover</button>
              </td>
            </tr>
          `);

          updateTotal();
          toggleFecharVenda();
          if (typeof cb === 'function') cb();
        },
        error: function(xhr) {
          $('#error-alert').text('Erro: ' + (xhr.responseJSON?.error || 'Produto n√£o encontrado')).show();
        }
      });
    }

    // Totaliza√ß√£o
    function updateTotal() {
      let total = 0;
      $('#itens-venda-table tbody tr').each(function() {
        const preco = parseFloat($(this).find('td:eq(2)').text().replace('R$','').trim()) || 0;
        const quantidade = parseInt($(this).find('.quantidade-input').val()) || 0;
        const sub = preco * quantidade;
        $(this).find('.subtotal').text(`R$ ${sub.toFixed(2)}`);
        total += sub;
      });
      $('#total-venda').text(`Total: R$ ${total.toFixed(2)}`);
    }

    function toggleFecharVenda() {
      const temItens = document.querySelectorAll('#itens-venda-table tbody tr').length > 0;
      document.getElementById('btn-fechar').disabled = !temItens;
    }

    // Enter no barcode
    $('#barcode-input').on('keypress', function(e) {
      if (e.which === 13) {
        e.preventDefault();
        const barcode = $(this).val().trim();
        if (!barcode) return;
        $('#error-alert').hide();
        adicionarItem(barcode, () => $(this).val('').focus());
      }
    });

    // Atualizar subtotal ao mudar qtd
    $(document).on('input', '.quantidade-input', updateTotal);

    // Remover item
    $(document).on('click', '.remove-item', function() {
      $(this).closest('tr').remove();
      updateTotal();
      toggleFecharVenda();
    });

    // Cadastro r√°pido de cliente
    $('#form-novo-cliente').on('submit', function(e) {
      e.preventDefault();
      $('#cliente-error').hide();
      const formData = $(this).serialize();

      $.ajax({
        url: '/clientes/novo',
        method: 'POST',
        data: formData,
        success: function(data) {
          $('#cliente-search').val(`${data.nome} (${data.cpf || ''})`);
          $('#id_cliente').val(data.id);
          $('#novoClienteModal').modal('hide');
          $('#form-novo-cliente')[0].reset();
        },
        error: function(xhr) {
          $('#cliente-error').text('Erro: ' + (xhr.responseJSON?.error || 'Falha ao cadastrar')).show();
        }
      });
    });

    // Carregar detalhes via AJAX
    async function carregarDetalhesVenda(id) {
      try {
        const resp = await fetch(`/vendas/${id}/json`);
        if (!resp.ok) throw new Error('Falha ao carregar detalhes da venda');

        const venda = await resp.json();
        const itens = Array.isArray(venda.itens) ? venda.itens : [];

        const dataBR = venda.data_venda ? new Date(venda.data_venda).toLocaleString('pt-BR') : '';
        document.getElementById('detalhes-meta').innerHTML =
          `<strong>Cliente:</strong> ${venda.cliente_nome || 'Sem cliente'}<br><strong>Data:</strong> ${dataBR}`;

        const tbody = document.getElementById('detalhes-body');
        tbody.innerHTML = '';
        let totalCalc = 0;

        if (!itens.length) {
          tbody.innerHTML = '<tr><td colspan="4" class="text-center text-muted">Sem itens</td></tr>';
        } else {
          itens.forEach(it => {
            const preco = Number(it.preco) || 0;
            const qtd = Number(it.quantidade) || 0;
            const sub = preco * qtd;
            totalCalc += sub;
            tbody.insertAdjacentHTML('beforeend', `
              <tr>
                <td>${it.nome}</td>
                <td>${qtd}</td>
                <td>R$ ${preco.toFixed(2)}</td>
                <td>R$ ${sub.toFixed(2)}</td>
              </tr>
            `);
          });
        }

        const total = Number(venda.total ?? totalCalc);
        document.getElementById('detalhes-total').textContent = `Total: R$ ${total.toFixed(2)}`;
      } catch (e) {
        document.getElementById('detalhes-body').innerHTML =
          `<tr><td colspan="4" class="text-danger text-center">${e.message}</td></tr>`;
        document.getElementById('detalhes-total').textContent = '';
      }
    }

    // Abrir modal de detalhes
    document.addEventListener('click', function (ev) {
      const btn = ev.target.closest('.btn-detalhes');
      if (!btn) return;

      const id = btn.getAttribute('data-id');
      document.getElementById('detalhes-body').innerHTML =
        '<tr><td colspan="4" class="text-center text-muted">Carregando...</td></tr>';
      document.getElementById('detalhes-total').textContent = '';
      document.getElementById('detalhes-meta').textContent = 'Carregando...';
      carregarDetalhesVenda(id);
    });

    /* ============================
       SUBMISS√ÉO AJAX DA VENDA
    ============================ */
    function renderLinhaVenda(venda) {
      const dataBR = venda.data_venda ? new Date(venda.data_venda).toLocaleString('pt-BR') : '';
      const cliente = venda.cliente_nome || 'Sem cliente';
      const total = Number(venda.total || 0).toFixed(2);
      const cancelada = (String(venda.status || '').toUpperCase() === 'CANCELADA');

      return `
        <tr data-row-venda-id="${venda.id}" class="${cancelada ? 'table-secondary row-cancelada' : ''}">
          <td>${dataBR}${cancelada ? ' <span class="badge bg-secondary ms-2">Cancelada</span>' : ''}</td>
          <td>${cliente}</td>
          <td>R$ ${total}</td>
          <td>
            <a class="btn btn-sm btn-outline-secondary btn-icon ${cancelada ? 'disabled' : ''}"
               href="${cancelada ? '#' : '/vendas/recibo/' + venda.id}"
               ${cancelada ? 'tabindex="-1" aria-disabled="true"' : 'target="_blank" rel="noopener"'} >
              <span>üñ®Ô∏è</span><span>Recibo</span>
            </a>
            <button type="button"
                    class="btn btn-sm btn-outline-info btn-icon btn-detalhes"
                    data-id="${venda.id}"
                    data-bs-toggle="modal"
                    data-bs-target="#detalhesVendaModal">
              <span>üîç</span><span>Detalhes</span>
            </button>
            ${cancelada ? '' : `
              <button type="button" class="btn btn-sm btn-outline-warning btn-icon btn-reverter" data-id="${venda.id}">
                <span>‚Ü©Ô∏è</span><span>Reverter</span>
              </button>
            `}
          </td>
        </tr>
      `;
    }

    function coletarItensVenda() {
      const itens = [];
      $('#itens-venda-table tbody tr').each(function() {
        const barcode = $(this).find('input[name$="[barcode]"]').val();
        const quantidade = parseInt($(this).find('.quantidade-input').val()) || 0;
        const precoTxt = $(this).find('td:eq(2)').text().replace('R$','').trim();
        const preco = parseFloat(precoTxt) || 0;
        if (barcode && quantidade > 0) itens.push({ barcode, quantidade, preco });
      });
      return itens;
    }

    $('#venda-form').on('submit', async function(e) {
      e.preventDefault();

      const itens = coletarItensVenda();
      if (itens.length === 0) {
        $('#error-alert').text('Adicione pelo menos 1 item antes de fechar a venda.').show();
        return;
      }

      const payload = { id_cliente: $('#id_cliente').val() || null, itens };
      const $btn = $('#btn-fechar');
      $btn.prop('disabled', true).text('Processando...');

      try {
        const resp = await fetch('/vendas', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
          body: JSON.stringify(payload)
        });

        if (!resp.headers.get('content-type')?.includes('application/json')) {
          location.reload();
          return;
        }
        if (!resp.ok) {
          const erro = await resp.json().catch(() => ({}));
          throw new Error(erro.error || 'Falha ao fechar a venda');
        }

        const venda = await resp.json();
        $('#lista-vendas-tbody').prepend(renderLinhaVenda(venda));

        $('#itens-venda-table tbody').empty();
        updateTotal();
        toggleFecharVenda();
        $('#cliente-search').val('');
        $('#id_cliente').val('');

        $('#error-alert').removeClass('alert-danger').addClass('alert-success')
          .text('Venda registrada com sucesso.').show();
        setTimeout(() => $('#error-alert').hide().removeClass('alert-success').addClass('alert-danger'), 3000);
      } catch (err) {
        $('#error-alert').text(err.message).show();
      } finally {
        $btn.prop('disabled', false).text('üíæ Fechar Venda');
      }
    });

    /* ============================
       REVERTER VENDA (com confirma√ß√£o)
    ============================ */
    async function reverterVenda(id) {
      const resp = await fetch(`/vendas/${id}/reverter`, {
        method: 'POST',
        headers: { 'Accept': 'application/json' }
      });
      if (!resp.ok) {
        const err = await resp.json().catch(() => ({}));
        throw new Error(err.error || 'Falha ao reverter venda.');
      }
      return await resp.json();
    }

    document.addEventListener('click', async function(ev) {
      const btn = ev.target.closest('.btn-reverter');
      if (!btn) return;

      const id = btn.getAttribute('data-id');
      const confirma = confirm(`Confirmar revers√£o da venda #${id}?\nO estoque ser√° devolvido e a venda ficar√° marcada como Cancelada.`);
      if (!confirma) return;

      try {
        const vendaAtualizada = await reverterVenda(id);
        const $row = $(`[data-row-venda-id="${id}"]`);
        // Substitui a linha inteira pelo template com status cancelada
        $row.replaceWith(renderLinhaVenda(vendaAtualizada));

        $('#error-alert').removeClass('alert-danger').addClass('alert-success')
          .text('Venda revertida com sucesso.').show();
        setTimeout(() => $('#error-alert').hide().removeClass('alert-success').addClass('alert-danger'), 3000);
      } catch (e) {
        $('#error-alert').text(e.message).show();
      }
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
